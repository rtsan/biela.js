/* biela.js v0.1.0 Licensed under the MIT license. (c) rtsan */
(function(e){var t=function(e){var t=n.instance;if(arguments.length===1){if(arguments[0].nodeName==="CANVAS")this.canvas=arguments[0],this.width=this.canvas.width,this.height=this.canvas.height;else if(typeof arguments[0]=="string"){this.canvas=document.getElementById("canvas");if(!this.canvas)throw new Error("#"+arguments[0]+" is not found");this.width=this.canvas.width,this.height=this.canvas.height}}else{var r=this.width=arguments[0],i=this.height=arguments[1];this.canvas=t.createCanvas(r,i)}this.viewportLeft=this.viewportTop=0,this.viewportWidth=this.width,this.viewportHeight=this.height,this.context=this.canvas.getContext("2d"),this.currentProgram=null,this.defaultFrameBuffer=new o(this.width,this.height),this.currentFrameBuffer=this.defaultFrameBuffer},n=function(){var e=this.createCanvas(1,1);this.context=e.getContext("2d")};n.prototype.createCanvas=function(e,t){var n=document.createElement("canvas");return n.width=e,n.height=t,n},n.prototype.createImageData=function(e,t){return this.context.createImageData(e,t)},n.instance=new n;var r=function(e,t){var r=n.instance;this.imageData=r.createImageData(e,t),this.clearValue=[0,0,0,0]};r.prototype.clear=function(){var e=this.imageData.data,t=this.clearValue;for(var n=0,r=e.length;n<r;n+=4)e[n]=t[0],e[n+1]=t[1],e[n+2]=t[2],e[n+3]=t[3]},r.prototype.write=function(e,t){var n=this.imageData.data;n[e]=t[0],n[e+1]=t[1],n[e+2]=t[2],n[e+3]=t[3]};var i=function(e,t){r.call(this,e,t)};i.prototype=Object.create(r.prototype);var s=function(e,t){r.call(this,e,t),this.clearValue=[255,255]};s.prototype.clear=function(){var e=this.imageData.data,t=this.clearValue;for(var n=0,r=e.length;n<r;n+=4)e[n]=t[0],e[n+1]=t[1]},s.prototype.test=function(e,t){var n=this.read(e);return t<n},s.prototype.write=function(e,t){var n=t*256|0,r=(t-n/256)*65536|0,i=this.imageData.data;i[e]=n,i[e+1]=r},s.prototype.read=function(e){var t=this.imageData.data;return t[e]/256+t[e+1]/65536};var o=function(e,t){this.colorBuffer=new i(e,t),this.depthBuffer=new s(e,t),this._minmaxBuffer=new u(e,t)};o.prototype.clear=function(e){var t;if(e)for(var n=0,r=e.length;n<r;n++)t=e[n],this[t+"Buffer"].clear();else this.colorBuffer.clear(),this.depthBuffer.clear()};var u=function(e,t){this.buf=[],this.width=e,this.height=t;var n=Number.MIN_VALUE,r=Number.MAX_VALUE;this.start=r,this.end=n;for(var i=0;i<t;i++)this.buf[i]={};this.init()};u.prototype.init=function(){var e=Number.MIN_VALUE,t=Number.MAX_VALUE,n;for(var r=0,i=this.height;r<i;r++)n=this.buf[r],n.min=t,n.max=e,n.taint=!1;this.start=t,this.end=e},u.prototype.feed=function(e,t){var n=this.buf[t];if(t<0||this.height<=t)return;e<n.min&&(n.min=Math.max(e,0)),n.max<e&&(n.max=Math.min(e,this.width)),t<this.start&&(this.start=t),this.end<t&&(this.end=t),n.taint=!0};var a=function(e){this.uniforms={},this.attributes={},this.attrNums={},this.varyings={},this.dest={},this.prog=e||function(){}};a.prototype.exec=function(e,t){var n,r=this.pickAttributes(t),i={};return this.prog(this.uniforms,r,i,this.dest),this.setVaryings(e,i),n=this.dest.position,this.dividePosition(),n},a.prototype.setVaryings=function(e,t){var n=this.varyings,r;for(var i in t)r=t[i],n[i][e]=r},a.prototype.pickAttributes=function(e){var t=this.attributes,n=this.attrNums,r={},i,s,o,u;for(var a in t){i=t[a],s=n[a],o=[],u=e*s;for(var f=0;f<s;f++)o[f]=i[u+f];r[a]=o}return r},a.prototype.dividePosition=function(){var e=this.dest.position,t=e[3];e[0]/=t,e[1]/=t,e[2]/=t},a.prototype.interpoleVaryings=function(e,t,n){var r=this.varyings,i={},s,o,u,a,f;for(var l in r){s=r[l],o=s[0],u=s[1],a=s[2],f=[];for(var c=0,h=o.length;c<h;c++)f[c]=o[c]*e+u[c]*t+a[c]*n;i[l]=f}return i};var f=function(e){this.uniforms={},this.varyings={},this.dest={},this.prog=e||function(){}};f.prototype.exec=function(e){this.prog(this.uniforms,e,this.dest);var t=this.dest.fragColor;return t[0]*=255,t[1]*=255,t[2]*=255,t[3]*=255,t},f.discard=function(){throw f.DISCARD_THROWABLE},f.DISCARD_THROWABLE=new Error("discard");var l=function(e,t){this.vertexShader=new a(e),this.fragmentShader=new f(t),this.uniforms={},this.attributes={},this.attrNums={},this.varyings={}};l.prototype.setUniform=function(e,t){this.uniforms[e]=t,this.vertexShader.uniforms[e]=t,this.fragmentShader.uniforms[e]=t},l.prototype.setAttribute=function(e,t,n){this.attributes[e]=t,this.attrNums[e]=n,this.vertexShader.attributes[e]=t,this.vertexShader.attrNums[e]=n},l.prototype.setUniforms=function(e){for(var t in e)this.setUniform(t,e[t])},l.prototype.setAttributes=function(e){var t;for(var n in e)t=e[n],this.setAttribute(n,t.value,t.num)},l.prototype.enableVarying=function(e){this.varyings[e]=[],this.vertexShader.varyings[e]=[],this.fragmentShader.varyings[e]=[]},l.prototype.enableVaryings=function(e){for(var t=0,n=e.length;t<n;t++)this.enableVarying(e[t])};var c={};c.flush=function(){var e=this.currentFrameBuffer.colorBuffer;this.context.putImageData(e.imageData,0,0)},c.renderTriangles=function(e,t,n){var r,i,s;for(var o=t,u=e*3;o<u;o+=3)r=n[o],i=n[o+1],s=n[o+2],this.renderTriangle(r,i,s)};var h=1,p=-1;c.cullCheck=function(e,t,n,r){var i=[],s=[];return vec3.subtract(n,t,i),vec3.subtract(r,t,s),vec3.cross(i,s),i[2]*e>0},c.renderTriangle=function(e,t,n){var r=this.currentProgram,i=r.vertexShader.exec(0,e),s=r.vertexShader.exec(1,t),o=r.vertexShader.exec(2,n),u;this.cullCheck(h,i,s,o)&&(u=this.getBoundPixels(i,s,o),this.rasterize(i,s,o,u))},c.getBoundPixels=function(e,t,n){var r=this.currentFrameBuffer._minmaxBuffer,i=r.width/2,s=r.height/2;r.init();var o=Math.round(e[0]*i)+i,u=-Math.round(e[1]*s)+s,a=Math.round(t[0]*i)+i,f=-Math.round(t[1]*s)+s,l=Math.round(n[0]*i)+i,c=-Math.round(n[1]*s)+s;return this.boundLine(o,u,a,f,r),this.boundLine(a,f,l,c,r),this.boundLine(l,c,o,u,r),mat3.inverse([o,u,1,a,f,1,l,c,1])},c.boundLine=function(e,t,n,r,i){var s=n<e?n:e,o=n<e?r:t,u=n<e?e:n,a=n<e?t:r,f=u-s,l=Math.abs(a-o),c=a>o?1:-1,h=[];if(f==l&&f==0)i.feed(e,t);else if(f>l){var p=o,d=f;for(var v=s;v<=u;v++)d>=f*2&&(p+=c,d-=f*2),d+=l*2,i.feed(v,p)}else{var m=o<a?o:a,g=o>a?o:a,v=o<a?s:u,d=l;for(var p=m;p<=g;p++)d>=l*2&&(v+=c,d-=l*2),d+=f*2,i.feed(v,p)}},c.rasterize=function(e,t,n,r){var i=this.currentFrameBuffer.colorBuffer,s=this.currentFrameBuffer.depthBuffer,o=this.currentFrameBuffer._minmaxBuffer,u=this.currentProgram.vertexShader,a=this.currentProgram.fragmentShader,f=this.viewportWidth,l=[],c=e[3],h=t[3],p=n[3],d=e[2],v=t[2],m=n[2],g=[],y,b,w,E,S,x,T,N,C,k;for(var L=o.start,A=o.end;L<A;L++){y=o.buf[L],b=L*f;for(var O=y.min,M=y.max;O<M;O++){N=(b+O)*4,g[0]=O,g[1]=L,g[2]=1,mat3.multiplyVec3(r,g),E=g[0],S=g[1],x=g[2],T=d*E+v*S+m*x;if(s.test(N,T)&&0<T&&T<=1){N=(b+O)*4;try{k=u.interpoleVaryings(E,S,x),C=a.exec(k),i.write(N,C)}catch(_){if(_.message==="discard")continue;throw _}s.write(N,T)}}}},t.prototype=c;var d=function(e){var t=n.instance,r=this.width=e.width,i=this.height=e.height;this.canvas=t.createCanvas(r,i);var s=this.canvas.getContext("2d");s.drawImage(e,0,0,r,i),this.imageData=s.getImageData(0,0,r,i)};d.prototype.getColorFromUV=function(e,t){t=1-t;var n=this.imageData.data,r=this.width,i=this.height;e-=e|0,e=e>0?e:-e,t-=t|0,t=t>0?t:-t;var s=e*(r-1)+.5|0,o=t*(i-1)+.5|0,u=(o*r+s)*4;return[n[u]/255,n[u+1]/255,n[u+2]/255,n[u+3]/255]},d.prototype.tex2d=function(e){return this.getColorFromUV(e[0],e[1])};var v={FrameBuffer:o,RenderBuffer:r,ColorBuffer:i,DepthBuffer:s,MinMaxBuffer:u,Program:l,VertexShader:a,FragmentShader:f,Texture:d};t.export=function(t){t=t||e;var n;for(var r in v)t[r]=v[r]},e.Biela=t})(this);